<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.wildfly.quickstarts</groupId>
        <artifactId>quickstart-parent</artifactId>
        <!--
        Maintain separation between the artifact id and the version to help prevent
        merge conflicts between commits changing the GA and those changing the V.
        -->
        <version>25.0.0.Beta1-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>todo-backend</artifactId>
    <packaging>war</packaging>
    <name>Quickstart: Todo backend</name>
    <description>This project demonstrates how to implement a Todo-Backend application to manage ToDos</description>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <version.server.bootable-jar>24.0.0.Final</version.server.bootable-jar>
        <version.wildfly-jar.maven.plugin>5.0.0.Final</version.wildfly-jar.maven.plugin>
        <version.wildfly-datasources-galleon-pack>2.0.2.Final</version.wildfly-datasources-galleon-pack>
        <version.org.wildfly.arquillian>3.0.1.Final</version.org.wildfly.arquillian>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>commons-logging-jboss-logging</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-bootable</artifactId>
            <version>${version.org.wildfly.arquillian}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Set the name of the WAR, used as the context root when the app is deployed -->
        <finalName>${project.artifactId}</finalName>
    </build>

    <profiles>
        <profile>
            <id>bootable-jar-openshift</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-jar-maven-plugin</artifactId>
                        <version>${version.wildfly-jar.maven.plugin}</version>
                        <configuration>
                            <feature-packs>
                                <feature-pack>
                                    <location>wildfly@maven(org.jboss.universe:community-universe)#${version.server.bootable-jar}</location>
                                </feature-pack>
                                <feature-pack>
                                    <groupId>org.wildfly</groupId>
                                    <artifactId>wildfly-datasources-galleon-pack</artifactId>
                                    <version>${version.wildfly-datasources-galleon-pack}</version>
                                </feature-pack>
                            </feature-packs>
                            <cloud/>
                            <layers>
                                <layer>cloud-server</layer>
                                <layer>postgresql-datasource</layer>
                            </layers>
                            <cli-sessions>
                                <cli-session>
                                    <!-- do not resolve expression as the CORS_ORIGIN env var -->
                                    <!-- can be set at runtime -->
                                    <resolve-expressions>false</resolve-expressions>
                                    <script-files>
                                        <script>${project.build.scriptSourceDirectory}/cors_filters.cli</script>
                                    </script-files>
                                </cli-session>
                            </cli-sessions>
                            <plugin-options>
                                <jboss-fork-embedded>true</jboss-fork-embedded>
                            </plugin-options>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-test</id>
            <properties>
                <postgres.db>todos</postgres.db>
                <postgres.password>mysecretpassword</postgres.password>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.36.0</version>
                        <configuration>
                            <showLogs>true</showLogs>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <images>
                                        <image>
                                            <name>postgres</name>
                                            <alias>todos-db</alias>
                                            <run>
                                                <ports>
                                                    <port>${postgres.port}:5432</port>
                                                </ports>
                                                <env>
                                                    <POSTGRES_USER>${postgres.db}</POSTGRES_USER>
                                                    <POSTGRES_PASSWORD>${postgres.password}</POSTGRES_PASSWORD>
                                                </env>
                                                <log>
                                                    <enabled>true</enabled>
                                                    <color>green</color>
                                                </log>
                                                <wait>
                                                    <log>(?s)database system is ready to accept connections.*database system is ready to accept connections</log>
                                                    <time>20000</time>
                                                </wait>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.failsafe.plugin}</version>
                        <configuration>
                            <environmentVariables>
                                <POSTGRESQL_DATABASE>${postgres.db}</POSTGRESQL_DATABASE>
                                <POSTGRESQL_SERVICE_HOST>localhost</POSTGRESQL_SERVICE_HOST>
                                <POSTGRESQL_SERVICE_PORT>${postgres.port}</POSTGRESQL_SERVICE_PORT>
                                <POSTGRESQL_USER>${postgres.db}</POSTGRESQL_USER>
                                <POSTGRESQL_PASSWORD>${postgres.password}</POSTGRESQL_PASSWORD>
                                <POSTGRESQL_DATASOURCE>ToDos</POSTGRESQL_DATASOURCE>
                            </environmentVariables>
                            <systemPropertyVariables>
                                <install.dir>${project.build.directory}/wildfly-it</install.dir>
                                <bootable.jar>${project.build.directory}/${project.build.finalName}-bootable.jar</bootable.jar>
                            </systemPropertyVariables>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
